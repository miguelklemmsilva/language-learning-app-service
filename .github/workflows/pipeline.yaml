name: Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature**'
  delete:
    branches:
      - 'feature**'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PIPELINE_EXECUTION_ROLE: ${{ secrets.PIPELINE_EXECUTION_ROLE }}

jobs:  
  build-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
          
      - name: Build lambdas
        run: |
          dotnet tool install -g Amazon.Lambda.Tools
          mkdir publish
          cd Lambda/LambdaStartup
          dotnet lambda package -farch x86_64 --output-package ../../publish/Lambdas.zip
      
      - uses: actions/upload-artifact@v4
        with:
          name: Package Lambdas
          path: publish/Lambdas.zip

  deploy:
    needs: [ build-and-package ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: Package Lambdas
          
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          
      - name: Sync files to S3 bucket
        run: |
          aws s3 sync Lambdas.zip s3://polybara-artifacts/Lambdas.zip 
  
  terraform:
    needs: [ deploy ]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-2
    defaults:
      run:
        working-directory: "./terraform"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=miguelklemmsilva-tf-state-bucket" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="region=eu-west-2"

      - name: Terraform destroy
        if: github.event_name == 'delete'
        run: |
          terraform destroy -auto-approve

      - name: Terraform Plan
        run: |
          terraform plan

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve